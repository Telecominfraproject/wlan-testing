{"name": "test_Captive_Portal_WPA2_2g_Personal_NAT[setup_profiles0]", "status": "broken", "statusDetails": {"message": "paramiko.ssh_exception.SSHException: No existing session", "trace": "request = <SubRequest 'get_ap_logs' for <Function test_Captive_Portal_WPA2_2g_Personal_NAT[setup_profiles0]>>, get_apnos = <class 'apnos.apnos.APNOS'>\nget_configuration = {'access_point': [{'ip': 'localhost', 'jumphost': True, 'jumphost_tty': '/dev/ttyAP4', 'mode': 'wifi5', ...}], 'contro...tation-Name': 'wlan0', '5G-Radio': ['1.1.wiphy1', '1.1.wiphy3'], '5G-Station-Name': 'wlan1', ...}, 'name': 'lanforge'}}\n\n    @pytest.fixture(scope=\"function\")\n    def get_ap_logs(request, get_apnos, get_configuration):\n        S = 9\n        instance_name = ''.join(random.choices(string.ascii_uppercase + string.digits, k=S))\n        for ap in get_configuration['access_point']:\n>           ap_ssh = get_apnos(ap, pwd=\"../libs/apnos/\", sdk=\"2.x\")\n\nconftest.py:678: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../libs/apnos/apnos.py:42: in __init__\n    client = self.ssh_cli_connect()\n../libs/apnos/apnos.py:82: in ssh_cli_connect\n    client.connect(self.ip, username=self.username, password=self.password,\n../../venv/lib/python3.8/site-packages/paramiko/client.py:412: in connect\n    server_key = t.get_remote_server_key()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <paramiko.Transport at 0x42e4e3a0 (connecting)>\n\n    def get_remote_server_key(self):\n        \"\"\"\n        Return the host key of the server (in client mode).\n    \n        .. note::\n            Previously this call returned a tuple of ``(key type, key\n            string)``. You can get the same effect by calling `.PKey.get_name`\n            for the key type, and ``str(key)`` for the key string.\n    \n        :raises: `.SSHException` -- if no session is currently active.\n    \n        :return: public key (`.PKey`) of the remote server\n        \"\"\"\n        if (not self.active) or (not self.initial_kex_done):\n>           raise SSHException(\"No existing session\")\nE           paramiko.ssh_exception.SSHException: No existing session\n\n../../venv/lib/python3.8/site-packages/paramiko/transport.py:834: SSHException"}, "parameters": [{"name": "setup_profiles", "value": "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'nat_captive_open_2g', 'appliedRadios': ['2G'], 'security': 'none'}, {'ssid_name': 'nat_captive_open_5g', 'appliedRadios': ['5G'], 'security': 'none'}], 'wpa': [{'ssid_name': 'nat_captive_wpa_2g', 'appliedRadios': ['2G'], 'security_key': 'lanforge'}, {'ssid_name': 'nat_captive_wpa_5g', 'appliedRadios': ['5G'], 'security_key': 'lanforge'}], 'wpa2_personal': [{'ssid_name': 'nat_captive_wpa2_2g', 'appliedRadios': ['2G'], 'security_key': 'lanforge', 'security': 'psk2'}, {'ssid_name': 'nat_captive2_wpa_5g', 'appliedRadios': ['5G'], 'security_key': 'lanforge', 'security': 'psk2'}], 'wpa3_personal': [{'ssid_name': 'nat_captive_wpa3_2g', 'appliedRadios': ['2G'], 'security_key': 'lanforge'}, {'ssid_name': 'nat_captive_wpa3_5g', 'appliedRadios': ['5G'], 'security_key': 'lanforge'}]}, 'rf': {}, 'radius': False, 'captive_portal': True}"}], "start": 1639118092097, "stop": 1639118092097, "uuid": "300dca06-88a5-4fa5-bdbf-064d31005409", "historyId": "779622a726fcc78a6bfa65a2133c894f", "testCaseId": "d6b7a08f52c11dbfbbe120ea5a8ae9f5", "fullName": "e2e.interOp.captive_portal.nat_mode.ios.test_captive_portal_modes.TestNatModeCaptivePortalSuiteOneNAT#test_Captive_Portal_WPA2_2g_Personal_NAT", "labels": [{"name": "suite", "value": "interop sanity"}, {"name": "subSuite", "value": "NAT Mode Captive Portal : Suite-A"}, {"name": "feature", "value": "NAT MODE CAPTIVE PORTAL"}, {"name": "tag", "value": "captive_portal"}, {"name": "tag", "value": "interop"}, {"name": "tag", "value": "nat"}, {"name": "tag", "value": "interop_ios"}, {"name": "tag", "value": "ios"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "sg123"}, {"name": "tag", "value": "twog"}, {"name": "tag", "value": "regression_interop"}, {"name": "tag", "value": "wpa2_personal"}, {"name": "tag", "value": "InteropsuiteA"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "parentSuite", "value": "e2e.interOp.captive_portal.nat_mode.ios"}, {"name": "host", "value": "imgd"}, {"name": "thread", "value": "9060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.interOp.captive_portal.nat_mode.ios.test_captive_portal_modes"}], "links": [{"type": "test_case", "url": "https://telecominfraproject.atlassian.net/browse/WIFI-5186", "name": "WIFI-5186"}]}