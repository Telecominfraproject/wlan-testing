{"name": "test_Maverick", "status": "broken", "statusDetails": {"message": "ValueError: set_maverick_mode_all did not yield a value", "trace": "cls = <class '_pytest.runner.CallInfo'>, func = <function call_runtest_hook.<locals>.<lambda> at 0x7f4df84f3d30>, when = 'setup', reraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(\n        cls,\n        func: \"Callable[[], TResult]\",\n        when: \"Literal['collect', 'setup', 'call', 'teardown']\",\n        reraise: Optional[\n            Union[Type[BaseException], Tuple[Type[BaseException], ...]]\n        ] = None,\n    ) -> \"CallInfo[TResult]\":\n        excinfo = None\n        start = timing.time()\n        precise_start = timing.perf_counter()\n        try:\n>           result: Optional[TResult] = func()\n\n../../venv/lib/python3.8/site-packages/_pytest/runner.py:311: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../../venv/lib/python3.8/site-packages/_pytest/runner.py:255: in <lambda>\n    lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n../../venv/lib/python3.8/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n../../venv/lib/python3.8/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n../../venv/lib/python3.8/site-packages/pluggy/manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n../../venv/lib/python3.8/site-packages/_pytest/runner.py:150: in pytest_runtest_setup\n    item.session._setupstate.prepare(item)\n../../venv/lib/python3.8/site-packages/_pytest/runner.py:452: in prepare\n    raise e\n../../venv/lib/python3.8/site-packages/_pytest/runner.py:449: in prepare\n    col.setup()\n../../venv/lib/python3.8/site-packages/_pytest/python.py:1647: in setup\n    self._request._fillfixtures()\n../../venv/lib/python3.8/site-packages/_pytest/fixtures.py:568: in _fillfixtures\n    item.funcargs[argname] = self.getfixturevalue(argname)\n../../venv/lib/python3.8/site-packages/_pytest/fixtures.py:581: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n../../venv/lib/python3.8/site-packages/_pytest/fixtures.py:601: in _get_active_fixturedef\n    self._compute_fixture_value(fixturedef)\n../../venv/lib/python3.8/site-packages/_pytest/fixtures.py:687: in _compute_fixture_value\n    fixturedef.execute(request=subrequest)\n../../venv/lib/python3.8/site-packages/_pytest/fixtures.py:1072: in execute\n    result = hook.pytest_fixture_setup(fixturedef=self, request=request)\n../../venv/lib/python3.8/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n../../venv/lib/python3.8/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n../../venv/lib/python3.8/site-packages/pluggy/manager.py:84: in <lambda>\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n../../venv/lib/python3.8/site-packages/_pytest/fixtures.py:1126: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfixturefunc = <function set_maverick_mode_all at 0x7f4df99c85e0>, request = <SubRequest 'set_maverick_mode_all' for <Function test_Maverick>>\nkwargs = {'fixtures_ver': <fixtures_2x.Fixtures_2x object at 0x7f4df8029be0>, 'get_apnos': <class 'apnos.apnos.APNOS'>, 'get_co...me': 'wlan1', ...}, 'name': 'lanforge'}}, 'request': <SubRequest 'set_maverick_mode_all' for <Function test_Maverick>>}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[_FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> _FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[_FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n>               raise ValueError(f\"{request.fixturename} did not yield a value\") from None\nE               ValueError: set_maverick_mode_all did not yield a value\n\n../../venv/lib/python3.8/site-packages/_pytest/fixtures.py:927: ValueError"}, "start": 1640773590729, "stop": 1640773590729, "uuid": "b9d6c9ae-383b-40f0-bf73-22617c27dff5", "historyId": "92b0315abeb9403d22573eb786ab2f7c", "testCaseId": "0716a199f5d1436619e16a9d32c4fd69", "fullName": "e2e.interOp.Maverick.iOS.test_maverick_mode.TestMavericMode#test_Maverick", "labels": [{"name": "subSuite", "value": "Maverick Mode Client Connect : Suite-A"}, {"name": "feature", "value": "MAVERICK MODE"}, {"name": "suite", "value": "interop sanity"}, {"name": "tag", "value": "maverick123"}, {"name": "tag", "value": "InteropsuiteA"}, {"name": "tag", "value": "bridge"}, {"name": "tag", "value": "client_connect"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "interop"}, {"name": "tag", "value": "ios"}, {"name": "tag", "value": "interop_uc_sanity"}, {"name": "tag", "value": "interop_ios"}, {"name": "parentSuite", "value": "e2e.interOp.Maverick.iOS"}, {"name": "host", "value": "imgd"}, {"name": "thread", "value": "85572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.interOp.Maverick.iOS.test_maverick_mode"}]}