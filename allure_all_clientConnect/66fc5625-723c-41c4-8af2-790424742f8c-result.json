{"name": "test_ClientConnect_2g_WPA2_Personal_Nat[setup_profiles0]", "status": "broken", "statusDetails": {"message": "paramiko.ssh_exception.SSHException: Error reading SSH protocol banner[Errno 104] Connection reset by peer", "trace": "self = <paramiko.Transport at 0x61642640 (unconnected)>\n\n    def _check_banner(self):\n        # this is slow, but we only have to do it once\n        for i in range(100):\n            # give them 15 seconds for the first line, then just 2 seconds\n            # each additional line.  (some sites have very high latency.)\n            if i == 0:\n                timeout = self.banner_timeout\n            else:\n                timeout = 2\n            try:\n>               buf = self.packetizer.readline(timeout)\n\n../../venv/lib/python3.8/site-packages/paramiko/transport.py:2211: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.packet.Packetizer object at 0x7ff661642610>, timeout = 200\n\n    def readline(self, timeout):\n        \"\"\"\n        Read a line from the socket.  We assume no data is pending after the\n        line, so it's okay to attempt large reads.\n        \"\"\"\n        buf = self.__remainder\n        while linefeed_byte not in buf:\n>           buf += self._read_timeout(timeout)\n\n../../venv/lib/python3.8/site-packages/paramiko/packet.py:380: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.packet.Packetizer object at 0x7ff661642610>, timeout = 200\n\n    def _read_timeout(self, timeout):\n        start = time.time()\n        while True:\n            try:\n>               x = self.__socket.recv(128)\nE               ConnectionResetError: [Errno 104] Connection reset by peer\n\n../../venv/lib/python3.8/site-packages/paramiko/packet.py:607: ConnectionResetError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <SubRequest 'get_ap_logs' for <Function test_ClientConnect_2g_WPA2_Personal_Nat[setup_profiles0]>>, get_apnos = <class 'apnos.apnos.APNOS'>\nget_configuration = {'access_point': [{'ip': 'localhost', 'jumphost': True, 'jumphost_tty': '/dev/ttyAP4', 'mode': 'wifi5', ...}], 'contro...tation-Name': 'wlan0', '5G-Radio': ['1.1.wiphy1', '1.1.wiphy3'], '5G-Station-Name': 'wlan1', ...}, 'name': 'lanforge'}}\n\n    @pytest.fixture(scope=\"function\")\n    def get_ap_logs(request, get_apnos, get_configuration):\n        S = 9\n        instance_name = ''.join(random.choices(string.ascii_uppercase + string.digits, k=S))\n        for ap in get_configuration['access_point']:\n>           ap_ssh = get_apnos(ap, pwd=\"../libs/apnos/\", sdk=\"2.x\")\n\nconftest.py:695: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n../libs/apnos/apnos.py:42: in __init__\n    client = self.ssh_cli_connect()\n../libs/apnos/apnos.py:82: in ssh_cli_connect\n    client.connect(self.ip, username=self.username, password=self.password,\n../../venv/lib/python3.8/site-packages/paramiko/client.py:406: in connect\n    t.start_client(timeout=timeout)\n../../venv/lib/python3.8/site-packages/paramiko/transport.py:660: in start_client\n    raise e\n../../venv/lib/python3.8/site-packages/paramiko/transport.py:2039: in run\n    self._check_banner()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <paramiko.Transport at 0x61642640 (unconnected)>\n\n    def _check_banner(self):\n        # this is slow, but we only have to do it once\n        for i in range(100):\n            # give them 15 seconds for the first line, then just 2 seconds\n            # each additional line.  (some sites have very high latency.)\n            if i == 0:\n                timeout = self.banner_timeout\n            else:\n                timeout = 2\n            try:\n                buf = self.packetizer.readline(timeout)\n            except ProxyCommandFailure:\n                raise\n            except Exception as e:\n>               raise SSHException(\n                    \"Error reading SSH protocol banner\" + str(e)\n                )\nE               paramiko.ssh_exception.SSHException: Error reading SSH protocol banner[Errno 104] Connection reset by peer\n\n../../venv/lib/python3.8/site-packages/paramiko/transport.py:2215: SSHException"}, "attachments": [{"name": "log", "source": "7e767f03-22e6-486d-8561-a6d24fced9ac-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "setup_profiles", "value": "{'mode': 'NAT', 'ssid_modes': {'open': [{'ssid_name': 'ssid_open_2g_VWB9233', 'appliedRadios': ['2G']}, {'ssid_name': 'ssid_open_5g_ZC63535', 'appliedRadios': ['5G']}], 'wpa': [{'ssid_name': 'ssid_wpa_2g_QBT5821', 'appliedRadios': ['2G'], 'security_key': 'something'}, {'ssid_name': 'ssid_wpa_5g_TVQ7452', 'appliedRadios': ['5G'], 'security_key': 'something'}], 'wpa2_personal': [{'ssid_name': 'ssid_wpa2_2g_WER9316', 'appliedRadios': ['2G'], 'security_key': 'something', 'security': 'psk2'}, {'ssid_name': 'ssid_wpa2_5g_W3T884', 'appliedRadios': ['5G'], 'security_key': 'something', 'security': 'psk2'}]}, 'rf': {}, 'radius': False}"}], "start": 1639481787017, "stop": 1639481787017, "uuid": "3f2bbbe8-a4f8-48fd-a4db-489de807dc48", "historyId": "b28491b3cf44d8208c99ddcc4864c58e", "testCaseId": "435e832058cf90565ac863a9c36f43f1", "fullName": "e2e.interOp.validation_of_operating_modes.nat_mode.client_connect_test.iOS.test_general_security_modes.TestNatModeConnectSuiteOne#test_ClientConnect_2g_WPA2_Personal_Nat", "labels": [{"name": "subSuite", "value": "Nat Mode Client Connect : Suite-A"}, {"name": "feature", "value": "NAT MODE CLIENT CONNECT"}, {"name": "suite", "value": "interop sanity"}, {"name": "tag", "value": "nat"}, {"name": "tag", "value": "client_connect"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_profiles')"}, {"name": "tag", "value": "interop_ios"}, {"name": "tag", "value": "interop_uc_sanity"}, {"name": "tag", "value": "ios"}, {"name": "tag", "value": "interop"}, {"name": "tag", "value": "twog"}, {"name": "tag", "value": "sanity"}, {"name": "tag", "value": "wpa2_personal"}, {"name": "tag", "value": "sg1234"}, {"name": "tag", "value": "InteropsuiteA"}, {"name": "parentSuite", "value": "e2e.interOp.validation_of_operating_modes.nat_mode.client_connect_test.iOS"}, {"name": "host", "value": "imgd"}, {"name": "thread", "value": "4210-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "e2e.interOp.validation_of_operating_modes.nat_mode.client_connect_test.iOS.test_general_security_modes"}], "links": [{"type": "test_case", "url": "https://telecominfraproject.atlassian.net/browse/WIFI-4485", "name": "WIFI-4485"}]}